@model Wellnut.Web.Models.AccountViewModel

@{
    ViewBag.Title = "Survey";
}

<head>
    <link rel="stylesheet" href="~/Content/css/Account.css" asp-append-version="true" />
    <link href="https://fonts.googleapis.com/css2?family=Montserrat&display=swap" rel="stylesheet">
</head>
<header>
    <nav class="navbar navbar-expand-sm navbar-toggleable-sm">
        <div class="container-fluid">
            <a class="navbar-brand" href="@Url.Action("User", "Home")"><img src="~/Content/media/logo.png" alt="Logo" height="100" width="150" /></a>
            <button type="button" class="navbar-toggler" data-bs-toggle="collapse" data-bs-target=".navbar-collapse" title="Toggle navigation" aria-controls="navbarSupportedContent"
                    aria-expanded="false" aria-label="Toggle navigation">
                <span class="navbar-toggler-icon"></span>
            </button>
            <div class="navbar-collapse collapse d-sm-inline-flex justify-content-between">
                <ul class="navbar-nav ms-auto">
                    <li class="nav-item">@Html.ActionLink("Journal", "Index", "Journal", new { area = "" }, new { @class = "nav-link" })</li>
                    <li class="nav-item">@Html.ActionLink("My Recipes", "Index", "MyRecipes", new { area = "" }, new { @class = "nav-link" })</li>
                    <li class="nav-item">@Html.ActionLink("Account", "Index", "Account", new { area = "" }, new { @class = "nav-link" })</li>
                    <li class="nav-item">@Html.ActionLink("Logout", "Index", "Home", new { area = "" }, new { @class = "nav-link" })</li>
                </ul>
            </div>
        </div>
    </nav>
</header>
<body>
    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()
        if (ViewBag.UpdateSucces == 1)
        {
            <div class="alert alert-success">Account was updated.</div>
        }

        <div class="form-horizontal">
            <h1>Your details</h1>
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group row justify-content-center">
                @Html.LabelFor(model => model.Username, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="group">
                    @Html.EditorFor(model => model.Username, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Username, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group row justify-content-center">
                @Html.LabelFor(model => model.Gender, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="group">
                    @Html.EnumDropDownListFor(model => model.Gender, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Gender, "", new { @class = "text-danger" })
                </div>
            </div>


            <div class="form-group row justify-content-center">
                @Html.LabelFor(model => model.Height, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="group">
                    @Html.EditorFor(model => model.Height, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Height, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group row justify-content-center">
                @Html.LabelFor(model => model.Weight, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="group">
                    @Html.EditorFor(model => model.Weight, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Weight, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group row justify-content-center">
                @Html.LabelFor(model => model.WeightGoal, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="group">
                    @Html.EnumDropDownListFor(model => model.WeightGoal, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.WeightGoal, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group row justify-content-center">
                @Html.LabelFor(model => model.ActivityLevel, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="group">
                    @Html.EnumDropDownListFor(model => model.ActivityLevel, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.ActivityLevel, "", new { @class = "text-danger" })
                </div>
            </div>

            <button type="button" class="button" onclick="location.href='@Url.Action("Edit", "Account")'">Edit</button>


        </div>
    }
</body>
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}

