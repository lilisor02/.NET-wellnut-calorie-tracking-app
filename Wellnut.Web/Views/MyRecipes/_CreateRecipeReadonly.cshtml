@model IEnumerable<Wellnut.Web.Models.MyRecipesViewModel>
@{
    ViewBag.Title = "Journal";
    int defaultQuantity = 100; // g
}
<head>
    <link rel="stylesheet" href="//code.jquery.com/ui/1.12.0/themes/base/jquery-ui.css">

    <script src="~/Scripts/jquery-3.7.0.js"></script>
    <script src="~/Scripts/jquery-ui-1.12.0.min.js"></script>


    <link rel="stylesheet" href="~/Content/css/CreateRecipe.css" asp-append-version="true" />
    <link href="https://fonts.googleapis.com/css2?family=Montserrat&display=swap" rel="stylesheet">

    <script>
        $(function () {
            var availableTags = [];
            $.ajax(
                {
                    type: 'GET',
                    url: '/Journal/getAllFoods',
                    success: function (response) {
                        $.each(response, function (key, item) {
                            availableTags.push(item.FoodName)
                        });
                    }
                });

            $("#SearchTerm").autocomplete({
                source: availableTags
            });
        });
    </script>
</head>
<header>
    <nav class="navbar navbar-expand-sm navbar-toggleable-sm">
        <div class="container-fluid">
            <a class="navbar-brand" href="@Url.Action("User", "Home")"><img src="~/Content/media/logo.png" alt="Logo" height="100" width="150" /></a>
            <button type="button" class="navbar-toggler" data-bs-toggle="collapse" data-bs-target=".navbar-collapse" title="Toggle navigation" aria-controls="navbarSupportedContent"
                    aria-expanded="false" aria-label="Toggle navigation">
                <span class="navbar-toggler-icon"></span>
            </button>
            <div class="navbar-collapse collapse d-sm-inline-flex justify-content-between">
                <ul class="navbar-nav ms-auto">
                    <li class="nav-item">@Html.ActionLink("Journal", "Index", "Journal", new { area = "" }, new { @class = "nav-link" })</li>
                    <li class="nav-item">@Html.ActionLink("My Recipes", "Index", "MyRecipes", new { area = "" }, new { @class = "nav-link" })</li>
                    <li class="nav-item">@Html.ActionLink("Account", "Index", "Account", new { area = "" }, new { @class = "nav-link" })</li>
                    <li class="nav-item">@Html.ActionLink("Logout", "Index", "Home", new { area = "" }, new { @class = "nav-link" })</li>
                </ul>
            </div>
        </div>
    </nav>
</header>
<body>
    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

        <div class="instruction-container">
            <h2>Entering a New Recipe</h2>
            <p>
                To create a new recipe, fill out this form with the
                name and ingredients of your recipe.
                Once you've created a recipe, you can search for it
                and add it to your diary just like any other food in
                our database.
            </p>
        </div>

        <h1>Create Recipe</h1>

        <div class="form-horizontal">
            <div class="form-group row">
                @*@Html.LabelFor(model => model.SearchTerm, htmlAttributes: new { @class = "control-label col-md-2" })*@
                <label for="RecipeName" name="RecipeName" class="control-label col-sm-3">Recipe Name:</label>
                <div class="group">
                    @*@Html.EditorFor(model => model.SearchTerm, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.SearchTerm, "", new { @class = "text-danger" })*@
                    <input type="text" name="RecipeName" id="RecipeName" class="form-control" value=@Session["recipeName"].ToString() readonly />
                    @*@ViewBag.RecipeName*@

                </div>
            </div>

            <div class="form-group row">
                @*@Html.LabelFor(model => model.SearchTerm, htmlAttributes: new { @class = "control-label col-md-2" })*@
                <label for="SearchTerm" name="SearchTerm" class="control-label col-sm-3">Ingredient:</label>
                <div class="group">
                    @*@Html.EditorFor(model => model.SearchTerm, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.SearchTerm, "", new { @class = "text-danger" })*@
                    <input type="text" name="SearchTerm" id="SearchTerm" class="form-control" required />
                </div>
            </div>

            <div class="form-group row">
                @*@Html.LabelFor(model => model.ServingSize, htmlAttributes: new { @class = "control-label col-md-2" })*@
                <label for="ServingSize" name="ServingSize" class="control-label col-sm-3">Serving size (g):</label>

                <div class="group">
                    @*@Html.EditorFor(model => model.ServingSize, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ServingSize, "", new { @class = "text-danger" })*@
                    <input type="number" name="ServingSize" id="ServingSize" class="form-control" min="0" required />

                </div>
            </div>
            <input type="submit" value="Add Ingredient" class="button" />

            <table class="table table-striped" id="food-table">
                <thead>
                    <tr>
                        <th>Name</th>
                        <th>Serving size(g)</th>
                        <th>Calories</th>
                        <th>Protein</th>
                        <th>Carbs</th>
                        <th>Fat</th>
                    </tr>
                </thead>

                <tbody>

                    @*@if (ViewBag.SearchTerm != null)
                {
                    if (ViewBag.SearchTerm.Count == 0)
                    {
                        <div class="alert alert-danger">The food you entered is not in the database. Search a food item that is stored in the database.</div>
                    }
                }*@


                    @if (Model != null)
                    {
                        if (Model.Count() > 0)
                        {
                            var sumOfCalories = 0;
                            var sumOfProtein = 0;
                            var sumOfCarbs = 0;
                            var sumOfFat = 0;


                            foreach (var item in Model)
                            {
                                ViewBag.UserId = item.UserInformationId;

                                var calories = @item.ServingSize * @item.Calories / defaultQuantity;
                                var protein = @item.ServingSize * @item.Protein / defaultQuantity;
                                var carbs = @item.ServingSize * @item.Carbs / defaultQuantity;
                                var fat = @item.ServingSize * @item.Fat / defaultQuantity;

                                sumOfCalories += calories;
                                sumOfProtein += (int)protein;
                                sumOfCarbs += (int)carbs;
                                sumOfFat += (int)fat;


                                <tr>
                                    <td>@item.FoodName</td>
                                    <td>@item.ServingSize<span> g</span></td>
                                    <td>@calories<span> g</span></td>
                                    <td>@((int)protein)<span> g</span></td>
                                    <td>@((int)carbs)<span> g</span></td>
                                    <td>@((int)fat)<span> g</span></td>
                                    <td><input type="button" value="Edit" class="button-link" onclick="location.href='@Url.Action("EditNewRecipe", "MyRecipes", new { id = item.RecipeId, name = item.RecipeName })'" /></td>
                                    <td><input type="button" value="Delete" class="button-link" onclick="return confirm('Are you sure you wish to delete this item?'), location.href='@Url.Action("DeleteIngredientNewRecipe", "MyRecipes", new { recipeId = item.RecipeId, foodId = item.FoodId })'" /></td>
                                </tr>

                                ViewBag.SumOfCalories = sumOfCalories;
                                ViewBag.SumOfProtein = sumOfProtein;
                                ViewBag.SumOfCarbs = sumOfCarbs;
                                ViewBag.SumOfFat = sumOfFat;
                            }

                        }
                    }

                </tbody>
            </table>

            @*<h3 id="total-text">Total</h3>
        <table class="table table-striped" id="total-table">
            <thead>
                <tr>
                    <th>Energy(kcal)</th>
                    <th>Protein</th>
                    <th>Carbs</th>
                    <th>Fat</th>
                </tr>
            </thead>
            <tbody>
                <tr>
                    <td>@ViewBag.SumOfCalories<span> g</span></td>
                    <td>@ViewBag.SumOfProtein<span> g</span></td>
                    <td>@ViewBag.SumOfCarbs<span> g</span></td>
                    <td>@ViewBag.SumOfFat<span> g</span></td>

                </tr>
            </tbody>
        </table>*@
            <div>
                @Html.ActionLink("Back to List", "Index")
            </div>
        </div>

    }
</body>