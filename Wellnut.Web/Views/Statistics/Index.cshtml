@model Wellnut.Web.Models.ReportViewModel

@{
    ViewBag.Title = "Statistics";
}
<head>
    <link rel="stylesheet" href="//code.jquery.com/ui/1.12.0/themes/base/jquery-ui.css">

    <script src="~/Scripts/jquery-3.7.0.js"></script>
    <script src="~/Scripts/jquery-ui-1.12.0.min.js"></script>


    <link rel="stylesheet" href="~/Content/css/Statistics.css" asp-append-version="true" />
    <link href="https://fonts.googleapis.com/css2?family=Montserrat&display=swap" rel="stylesheet">
</head>
<header>
    <nav class="navbar navbar-expand-sm navbar-toggleable-sm">
        <div class="container-fluid">
            <a class="navbar-brand" href="@Url.Action("User", "Home")"><img src="~/Content/media/logo.png" alt="Logo" height="100" width="150" /></a>
            <button type="button" class="navbar-toggler" data-bs-toggle="collapse" data-bs-target=".navbar-collapse" title="Toggle navigation" aria-controls="navbarSupportedContent"
                    aria-expanded="false" aria-label="Toggle navigation">
                <span class="navbar-toggler-icon"></span>
            </button>
            <div class="navbar-collapse collapse d-sm-inline-flex justify-content-between">
                <ul class="navbar-nav ms-auto">
                    <li class="nav-item">@Html.ActionLink("Journal", "Index", "Journal", new { area = "" }, new { @class = "nav-link" })</li>
                    <li class="nav-item">@Html.ActionLink("My Recipes", "Index", "MyRecipes", new { area = "" }, new { @class = "nav-link" })</li>
                    <li class="nav-item">@Html.ActionLink("Report", "Index", "Statistics", new { area = "" }, new { @class = "nav-link" })</li>
                    <li class="nav-item">@Html.ActionLink("Account", "Index", "Account", new { area = "" }, new { @class = "nav-link" })</li>
                    <li class="nav-item">@Html.ActionLink("Logout", "Index", "Home", new { area = "" }, new { @class = "nav-link" })</li>
                </ul>
            </div>
        </div>
    </nav>
</header>

@using (Html.BeginForm("CreatePDFDocument", "Statistics", FormMethod.Get))
{
    @Html.AntiForgeryToken()

    <div class="report-container">
        <h2>Generating a PDF Report</h2>
        <p>
            To generate a new PDF report, select a date interval and a type for your report.
            The report will automatically be downloaded on your computer.
        </p>
    </div>

    <div class="form-horizontal info-container">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @*<div class="form-group row">
                @Html.LabelFor(model => model.ReportName, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.ReportName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.ReportName, "", new { @class = "text-danger" })
                </div>
            </div>*@

        <div class="form-group row">
            @Html.LabelFor(model => model.ReportType, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="group">
                @Html.EnumDropDownListFor(model => model.ReportType, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ReportType, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group row">
            @Html.LabelFor(model => model.ReportStartDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ReportStartDate, new { htmlAttributes = new { @type = "date", @class = "form-control", @required = "required" } })
                @Html.ValidationMessageFor(model => model.ReportStartDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group row">
            @Html.LabelFor(model => model.ReportEndDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ReportEndDate, new { htmlAttributes = new { @type = "date", @class = "form-control", @required = "required" } })
                @Html.ValidationMessageFor(model => model.ReportEndDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <input type="submit" value="Generate PDF" class="button" />

    </div>


    Html.EndForm();

}

